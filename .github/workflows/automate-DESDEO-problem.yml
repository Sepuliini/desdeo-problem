name: automate-DESDEO-problem

on:
  pull_request:
    branches:
      - master
      
  #workflow_dispatch:
jobs:
  build:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-python@v2
        - uses: actions/cache@v2
          with:
            path: ~/.cache/pip
            key: ${{ runner.os }}-pip
            restore-keys: ${{ runner.os }}-pip

  test:
    #needs: linting
    strategy:
      fail-fast: true
      matrix:
        os: [ "ubuntu-latest" ]
        python-version: [ "3.8", "3.9" ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
          
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
        
      - name: Install library
        run: poetry install --no-interaction

      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest tests/
          #coverage report
      
      - name: Update master branch
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 'Update main branch'
          branch: master



